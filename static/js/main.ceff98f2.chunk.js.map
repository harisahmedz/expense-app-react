{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseFrom","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","ExpenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","Month","toLocaleString","month","day","getDate","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","DataPointsValue","dataPoints","datapoint","Value","MaxExpenseValue","dataPoint","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DummyExpenses","App","setExpeneses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ceff98f2.chunk.js","sourcesContent":["import React,{useState} from 'react'; \r\nimport './ExpenseForm.css';\r\n\r\n\r\nconst ExpenseFrom = (props)=>{\r\n    const [enteredTitle, setEnteredTitle]= useState('');\r\n    const [enteredAmount, setEnteredAmount]= useState('');\r\n    const [enteredDate, setEnteredDate]= useState('');\r\n    \r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount:'',\r\n    //     enteredDate:'',\r\n    // });\r\n    const titleChangeHandler = (event) =>{\r\n        setEnteredTitle(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle:event.target.value,\r\n        // });\r\n        // setUserInput((prevState)=>{\r\n        //     return {...prevState, enteredTitle:event.target.value};\r\n        // });\r\n    }\r\n    const amountChangeHandler=(event)=>{\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount:event.target.value,\r\n        // });\r\n    }\r\n    const dateChangeHandler = (event)=>{\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate:event.target.value,\r\n        // });\r\n    }\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n        const ExpenseData = {\r\n            title:enteredTitle,\r\n            amount:+enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        props.onSaveExpenseData(ExpenseData);\r\n    }\r\n\r\n    return (\r\n    <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" min=\"0.01\" step =\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n            \r\n            </div>\r\n\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"date\" min=\"01-01-2019\" max='12-31-2021' value={enteredDate} onChange={dateChangeHandler}/>\r\n            \r\n            </div>\r\n        </div>\r\n        <div className=\".new-expense__actions\">\r\n            <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>)\r\n};\r\n\r\nexport default ExpenseFrom;\r\n","import React from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props)=> {\r\n    const SaveExpenseDataHandler = enteredExpenseData => {\r\n        const expenseData ={\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString(),\r\n        }\r\n        props.onAddExpense(expenseData);\r\n    };\r\n    return  <div className=\"new-expense\">\r\n        <ExpenseForm onSaveExpenseData={SaveExpenseDataHandler}/>\r\n    </div>\r\n};\r\n\r\nexport default NewExpense;\r\n","import './Card.css';\r\nconst Card= (props)=>{\r\n    const classes = 'card ' + props.className;\r\n    return  <div className={classes}>{props.children} </div>\r\n    \r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props)=>{\r\n    const Month = props.date.toLocaleString('en-US',{month:'long'});\r\n    const day = props.date.getDate ();\r\n    const year = props.date.getFullYear();\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{Month}</div>\r\n            <div className=\"expense-date__year\">{day}</div>\r\n            <div className=\"expense-date__day \">{year}</div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import './ExpenseItem.css'\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card'\r\nimport React from 'react';\r\n\r\nconst ExpenseItem=(props)=> {\r\n\r\n    return (\r\n        <li>\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      \r\n        </Card>\r\n        </li> \r\n    );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css'\r\n\r\nconst ExpensesList = (props) =>{\r\n    if (props.items.length===0){\r\n        return <h2 className=\"expenses-list__fallback \">No Expenses Found</h2> \r\n    }\r\n    return <ul className=\"expenses-list\">\r\n        {\r\n            props.items.map((expense) => (\r\n                <ExpenseItem\r\n                  key ={expense.id}\r\n                  title={expense.title}\r\n                  amount={expense.amount}\r\n                  date={expense.date}\r\n                />\r\n              ))\r\n        }\r\n    </ul>\r\n}\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) =>{\r\n    let barFillHeight = 0;\r\n\r\n    if (props.maxValue >0){\r\n        barFillHeight = Math.round(props.value/props.maxValue*100)+\"%\";\r\n    }\r\n\r\n    return (\r\n    <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>)\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const DataPointsValue = props.dataPoints.map((datapoint)=>datapoint.Value);\r\n    const MaxExpenseValue = Math.max(...DataPointsValue);\r\n    \r\n    return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.Value}\r\n          maxValue={MaxExpenseValue}\r\n          label={dataPoint.label}\r\n          \r\n\r\n        />\r\n        \r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpensesChart = (props) =>{\r\n    const chartDataPoints = [\r\n        {label:\"Jan\", Value:0},\r\n        {label:\"Feb\", Value:0},\r\n        {label:\"Mar\", Value:0},\r\n        {label:\"Apr\", Value:0},\r\n        {label:\"May\", Value:0},\r\n        {label:\"Jun\", Value:0},\r\n        {label:\"Jul\", Value:0},\r\n        {label:\"Aug\", Value:0},\r\n        {label:\"Oct\", Value:0},\r\n        {label:\"Nov\", Value:0},\r\n        {label:\"Dec\", Value:0},\r\n    ]\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].Value +=expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;","import Card from '../UI/Card'\r\nimport './Expenses.css'\r\nimport ExpensesFilter from './ExpenseFilter';\r\nimport React,{useState} from 'react'\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses= (props)=>{\r\n   // const expenses =  props.items;\r\n  \r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n    \r\n    const filterChangeHandler = (selectedYear)=>{\r\n        setFilteredYear(selectedYear);\r\n        \r\n    }\r\n    const filteredExpenses = props.items.filter((expense) =>{\r\n        return expense.date.getFullYear().toString()===filteredYear;\r\n    });\r\n\r\n\r\n\r\n\r\n    return (\r\n      <Card className=\"expenses-items\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpensesList items={filteredExpenses}/>\r\n        \r\n        {/* {\r\n            filteredExpenses.length === 0 && <p>No Expenses Found</p>\r\n        }\r\n        {\r\n            filteredExpenses.length >0 &&\r\n            filteredExpenses.map((expense) => (\r\n                <ExpenseItem\r\n                  key ={expense.id}\r\n                  title={expense.title}\r\n                  amount={expense.amount}\r\n                  date={expense.date}\r\n                />\r\n              ))\r\n        } */}\r\n        {/* {\r\n            filteredExpenses.length === 0 ? ():\r\n            (filteredExpenses.map((expense) => (\r\n                <ExpenseItem\r\n                  key ={expense.id}\r\n                  title={expense.title}\r\n                  amount={expense.amount}\r\n                  date={expense.date}\r\n                />\r\n              )))\r\n        } */}\r\n\r\n  \r\n      </Card>\r\n    );\r\n}\r\nexport default Expenses;","import React,{useState} from \"react\";\nimport NewExpense from './components/NewExpense/NewExpense'\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DummyExpenses= [\n  {\n    id: \"1\",\n    title: \"Toilet Paper\",\n    amount: 94.75,\n    date: new Date(2020, 2, 28),\n  },\n  {\n    id: \"2\",\n    title: \"Car Insurance\",\n    amount: 294.75,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"3\",\n    title: \"Book\",\n    amount: 12.75,\n    date: new Date(2021, 4, 28),\n  },\n];\n\nconst App= ()=> {\n  const[expenses, setExpeneses]= useState(DummyExpenses);\n  const addExpenseHandler = (expense)=>{\n    setExpeneses(prevExpenses =>{\n      return [expense,...expenses]\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </div>\n  );\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Lets Get Started\"),\n  //   React.createElement(Expenses, {items:expenses})\n  // );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}